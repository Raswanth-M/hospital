// <auto-generated />
using System;
using HospitalAppMgnt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalAppMgnt.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250324063427_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalAppMgnt.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("DoctorScheduleId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentDate = new DateTime(2025, 3, 20, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            PatientId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentDate = new DateTime(2025, 3, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            PatientId = 2,
                            Status = "Scheduled"
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.DoctorProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DoctorProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Availability = "9 AM - 5 PM",
                            ContactDetails = "123-456-7890",
                            Name = "Dr. John Doe",
                            Specialization = "Cardiology",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Availability = "10 AM - 6 PM",
                            ContactDetails = "987-654-3210",
                            Name = "Dr. Jane Smith",
                            Specialization = "Neurology",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.DoctorSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvailableTimeSlots")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSlotFilled")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("DoctorSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableTimeSlots = "9 AM - 10 AM, 2 PM - 3 PM",
                            DoctorId = 1,
                            IsSlotFilled = false,
                            ScheduleId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvailableTimeSlots = "10 AM - 11 AM, 4 PM - 5 PM",
                            DoctorId = 2,
                            IsSlotFilled = false,
                            ScheduleId = 2
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.MedicalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfVisit = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Asthma",
                            PatientId = 1,
                            Treatment = "Inhaler"
                        },
                        new
                        {
                            Id = 2,
                            DateOfVisit = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diagnosis = "Diabetes",
                            PatientId = 2,
                            Treatment = "Insulin"
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "Your appointment is confirmed.",
                            Status = "Unread",
                            Timestamp = new DateTime(2025, 3, 24, 12, 4, 26, 681, DateTimeKind.Local).AddTicks(1388),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Message = "Your test results are available.",
                            Status = "Unread",
                            Timestamp = new DateTime(2025, 3, 24, 12, 4, 26, 681, DateTimeKind.Local).AddTicks(1401),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.PatientProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicalHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PatientProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactDetails = "alice@example.com",
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicalHistory = "Asthma",
                            Name = "Alice Johnson",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            ContactDetails = "bob@example.com",
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MedicalHistory = "Diabetes",
                            Name = "Bob Brown",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "password123",
                            Role = "Doctor",
                            UserName = "doctor1"
                        },
                        new
                        {
                            Id = 2,
                            Password = "password123",
                            Role = "Patient",
                            UserName = "patient1"
                        },
                        new
                        {
                            Id = 3,
                            Password = "password123",
                            Role = "Doctor",
                            UserName = "doctor2"
                        },
                        new
                        {
                            Id = 4,
                            Password = "password123",
                            Role = "Patient",
                            UserName = "patient2"
                        });
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.Appointment", b =>
                {
                    b.HasOne("HospitalAppMgnt.Models.DoctorProfile", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalAppMgnt.Models.DoctorSchedule", null)
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorScheduleId");

                    b.HasOne("HospitalAppMgnt.Models.PatientProfile", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.DoctorProfile", b =>
                {
                    b.HasOne("HospitalAppMgnt.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.DoctorSchedule", b =>
                {
                    b.HasOne("HospitalAppMgnt.Models.DoctorProfile", "Doctor")
                        .WithMany("DoctorSchedules")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.MedicalHistory", b =>
                {
                    b.HasOne("HospitalAppMgnt.Models.PatientProfile", "Patient")
                        .WithMany("MedicalHistories")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.Notification", b =>
                {
                    b.HasOne("HospitalAppMgnt.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.PatientProfile", b =>
                {
                    b.HasOne("HospitalAppMgnt.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.DoctorProfile", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("DoctorSchedules");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.DoctorSchedule", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HospitalAppMgnt.Models.PatientProfile", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("MedicalHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
